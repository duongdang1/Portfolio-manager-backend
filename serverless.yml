org: duongdang
app: portfolio-manager
service: portfolio-manager 
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1
  iam: 
    role: 
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:*"
          Resource:
            - Fn::GetAtt: 
              - PortfolioTable
              - Arn
            - Fn::GetAtt: 
              - WatchlistTable
              - Arn

functions:
  addPorftolio:
    handler: src/portfolio/Portfolio.addPortfolio
    events:
      - httpApi:
          path: /portfolio
          method: post
  
  getPortfolio:
    handler: src/portfolio/Portfolio.getPortfolio
    events:
      - httpApi:
          path: /portfolio
          method: get
  
  updatePortfolio:
    handler: src/portfolio/Portfolio.updatePortfolio
    events:
      - httpApi:
          path: /portfolio
          method: put
  
  deletePortfolio:
    handler: src/portfolio/Portfolio.deletePortfolio
    events:
      - httpApi:
          path: /portfolio
          method: delete

  createWatchList:
    handler: src/watchlist/Watchlist.createWatchList
    events:
      - httpApi:
          path: /watchlist
          method: post
  
  getWatchList:
    handler: src/watchlist/Watchlist.getWatchList
    events:
      - httpApi:
          path: /watchlist/{id}
          method: get
  
  updateWatchList:
    handler: src/watchlist/Watchlist.updateWatchList
    events:
      - httpApi:
          path: /watchlist/{id}
          method: put
  
  deleteWatchList:
    handler: src/watchlist/Watchlist.deleteWatchList
    events:
      - httpApi:
          path: /watchlist/{id}
          method: delete

  getTimeSeriesData: 
    handler: src/data/time-series/TimeSeries.getTimeSeriesData
    events: 
      - httpApi:
          path: /getTimeSeries
          method: get

  getRealTimeData: 
    handler: src/data/real-time/RealTime.getRealTimeData
    events: 
      - httpApi: 
          path: /getRealTime
          method: post

resources:
  Resources: 
    PortfolioTable:
      Type: AWS::DynamoDB::Table
      Properties: 
        TableName: PortfolioTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions: 
          - AttributeName: id
            AttributeType: S
        KeySchema: 
          - AttributeName: id
            KeyType: HASH
    
    WatchlistTable: 
      Type: AWS::DynamoDB::Table
      Properties: 
        TableName: WatchlistTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions: 
          - AttributeName: id
            AttributeType: S
        KeySchema: 
          - AttributeName: id
            KeyType: HASH